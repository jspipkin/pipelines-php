trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'pipelines-unbuntu-docker'
  buildNumber: $(Date:yyyyMMdd)$(Rev:.r)
  environment: 'QA'


stages:
- stage: DockerUnbuntuImage
  jobs:
  - job: SpoolUnbuntuImage
    container: ubuntu:16.04 
    # Docker Hub image reference
    steps: 
    # - bash:     
    # # task: Docker@2
    # # displayName: Build an image
    # # inputs:
    # #   repository: $(imageName)
    # #   command: build
    # #   Dockerfile: app/Dockerfile
    - script: echo Building Unbuntu Docker Image!


- stage: DeployDirectories
  jobs:
  - job: CreateDeployDirectory
    steps:    
    - bash: if [ ! -d "/var/www/html/versions/<environment>.<buildNumber>"];then mkdir /var/www/html/versions/<environment>.<buildNumber>(;fi)
    - script: echo Creating Directory for build!
- stage: UnpackFiles
  jobs:
  - job: UnpackFilesForWebServer
    steps:
    - bash: unzip <zipfile> -d /var/www/html/versions/<env>.<buildNumber>/
            mv /var/www/html/versions/<env>.<buildNumber>/settings/banks.<env>.json /var/www/html/versions/<env>.<buildNumber>/settings/banks.json 
            rm -f /var/www/html/versions/<env>.<buildNumber>/settings/banks.*.json
            chgrp -R deployment /var/www/html/versions/<env>.<buildNumber>/
            chmod 770 /var/www/html/versions/<env>.<buildNumber>/cache
    - script: echo Unpacking Web Server Files!

- stage: PointWebServerToRelease
  jobs:
  - job: PointWebServer
    steps:
    - bash: rm /var/www/html/versions/current
            ln -s /var/www/html/versions/<env>.<buildNumber>/var/www/html/versions/current
    - script: echo Pointing Web Server to Current Release!


- stage: DBServerBackup
  jobs:
  - job: DBBackup
    steps:
    - bash: /opt/bim/backups/bin/dbbimapi_backup.sh
    - script: Backing Up DB Server!

- stage: DBMigrationScripts
  jobs:
  - job: DBMigrations
    steps:
    - bash: cp /data01/bin/phinx /var/www/html/versions/current/db/vendor/robmorgan/phinx/bin
            cd /var/www/html/versions/current/db
            php vendor/robmorgan/phinx/bin/phinx migrate -e qabus -c /etc/bim-api/phinx.yml
    - script: echo Running DB Migration Scripts!

- stage: WebServiceRestart
  jobs:
  - job: ApacheRestart
    steps:
    - bash: sudo /sbin/apachectl restart
    - script: echo Restarting Web Server!
    